{"version":3,"sources":["App.jsx","index.js"],"names":["instance","App","props","messageToken","streamToken","stream","chats","users","state","updatedData","keyUpLoginModal","bind","keyUpMessage","this","setState","timestamp","date","Date","toLocaleDateString","toLocaleTimeString","chatText","push","chat","scrollTop","scrollHeight","clientHeight","map","chatItem","message","disabled","value","title","classList","remove","clear_users","add","Set","update_users","url","sessionStorage","getItem","login_modal","style","display","handle_disconnect","show_login","start_stream","instance2","EventSource","addEventListener","handle_connect","close","innerHTML","event","data","JSON","parse","user","output","date_format","delete","status","newArr","target","readyState","console","log","request","XMLHttpRequest","form","FormData","append","password","username","setItem","open","onreadystatechange","responseText","message_token","stream_token","alert","send","key","login","preventDefault","setRequestHeader","getResponseHeader","id","ref","elem","class","item","user_list","Array","from","sort","onKeyUp","type","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.605738f0.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nlet instance = null;\r\nclass App extends Component {\r\n    \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        updatedData: true\r\n      };\r\n\r\n      instance = this;\r\n      this.keyUpLoginModal = this.keyUpLoginModal.bind(this);\r\n      this.keyUpMessage = this.keyUpMessage.bind(this);      \r\n  };\r\n\r\n  messageToken=null;\r\n  streamToken=null;\r\n  stream = null;\r\n  chats = [];\r\n  users={};\r\n\r\n    update_users() {\r\n    this.setState(({updatedData})=>({['updatedData']:!updatedData}));\r\n    }\r\n    \r\n    date_format(timestamp) {\r\n        var date = new Date(timestamp * 1000);\r\n        return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\r\n    }\r\n    \r\n    output(chatText) {\r\n        instance.chats.push(chatText);\r\n        this.setState(({updatedData})=>({['updatedData']:!updatedData}));\r\n        this.chat.scrollTop = this.chat.scrollHeight - this.chat.clientHeight;\r\n    }\r\n\r\n    chatMessages(){\r\n        return this.chats.map(chatItem=>(\r\n            <div>chatItem</div>\r\n        )\r\n        );\r\n    }\r\n\r\n    handle_connect() {\r\n        this.message.disabled = false;\r\n        this.message.value = \"\";\r\n        this.title.classList.remove(\"disconnected\");\r\n    }\r\n    handle_disconnect(clear_users) {\r\n    this.message.disabled = true;\r\n    this.message.value = \"Please connect to send messages.\";\r\n    this.title.classList.add(\"disconnected\");\r\n    if (clear_users) {\r\n        this.users = new Set();\r\n        this.update_users();\r\n        }\r\n    }\r\n\r\n    show_login() {\r\n        this.url.value = sessionStorage.getItem(\"url\") || \"https://chat.cs291.com\";\r\n        this.login_modal.style.display = \"block\";\r\n    }\r\n\r\n  componentDidMount() {\r\n    if (this.messageToken === null) {\r\n        this.handle_disconnect(true);\r\n        this.show_login();\r\n    } else {\r\n        this.start_stream();\r\n    }\r\n  }\r\n\r\n  start_stream() {\r\n    const instance2 = instance;\r\n    this.stream = new EventSource(\r\n        sessionStorage.getItem(\"url\") + \"/stream/\" + this.streamToken\r\n    );\r\n    this.stream.addEventListener(\r\n        \"open\",\r\n        ()=> {\r\n            instance2.handle_connect();\r\n        }\r\n    );\r\n    this.stream.addEventListener(\r\n        \"Disconnect\",\r\n        ()=> {\r\n            this.close();\r\n            instance2.handle_disconnect(true);\r\n            instance2.messageToken = null;\r\n            instance2.streamToken = null;\r\n            instance2.chat.innerHTML = \"\";\r\n            instance2.show_login();\r\n        },\r\n        false\r\n    );\r\n    this.stream.addEventListener(\r\n        \"Join\",\r\n        (event)=> {\r\n            var data = JSON.parse(event.data);\r\n            instance2.users.add(data.user);\r\n            instance2.update_users();\r\n            instance2.output(instance2.date_format(data[\"created\"]) + \" JOIN: \" + data.user);\r\n        },\r\n        false\r\n    );\r\n    this.stream.addEventListener(\r\n        \"Message\",\r\n        (event)=> {\r\n            var data = JSON.parse(event.data);\r\n            instance2.output(instance2.date_format(data[\"created\"]) + \" (\" + data.user + \") \" + data.message);\r\n        },\r\n        false\r\n    );\r\n    this.stream.addEventListener(\r\n        \"Part\",\r\n        (event)=> {\r\n            var data = JSON.parse(event.data);\r\n            instance2.users.delete(data.user);\r\n            instance2.update_users();\r\n            instance2.output(instance2.date_format(data[\"created\"]) + \" PART: \" + data.user);\r\n        },\r\n        false\r\n    );\r\n    this.stream.addEventListener(\r\n        \"ServerStatus\",\r\n        (event) =>{\r\n            var data = JSON.parse(event.data);\r\n            instance2.output(instance2.date_format(data[\"created\"]) + \" STATUS: \" + data.status);\r\n        },\r\n        false\r\n    );\r\n    this.stream.addEventListener(\r\n        \"Users\",\r\n        (event) =>{            \r\n            const newArr = JSON.parse(event.data).users;\r\n            instance2.users = new Set(newArr);\r\n            instance2.update_users();\r\n        },\r\n        false\r\n    );\r\n    this.stream.addEventListener(\r\n        \"error\",\r\n        (event) =>{\r\n            if (event.target.readyState === 2) {\r\n                instance2.messageToken = null;\r\n                instance2.streamToken = null;\r\n                instance2.handle_disconnect(true);\r\n                instance2.show_login();\r\n            } else {\r\n                instance2.handle_disconnect(false);\r\n                console.log(\"Disconnected, retrying\");\r\n            }\r\n        },\r\n        false\r\n    );\r\n}\r\n\r\nlogin() {\r\n    var request = new XMLHttpRequest();\r\n    var form = new FormData();\r\n    form.append(\"password\", this.password.value);\r\n    form.append(\"username\", this.username.value);\r\n    sessionStorage.setItem(\"url\", this.url.value);\r\n\r\n    request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/login\");\r\n    request.onreadystatechange = function() {\r\n        if (this.readyState !== 4) return;\r\n        if (this.status === 201) {\r\n            instance.login_modal.style.display = \"none\";\r\n            instance.password.value = \"\";\r\n            instance.username.value = \"\";\r\n            const data = JSON.parse(this.responseText);\r\n            instance.messageToken = data.message_token;\r\n            instance.streamToken = data.stream_token;\r\n            instance.start_stream();\r\n        } else if (this.status === 403) {\r\n            alert(\"Invalid username or password\");\r\n        } else if (this.status === 409) {\r\n            alert(instance.username.value + \" is already logged in\");\r\n\r\n        } else {\r\n            alert(this.status + \" failure to /login\");\r\n        }\r\n    };\r\n    request.send(form);\r\n}\r\n\r\n  keyUpLoginModal(event) {\r\n    if (this.messageToken !== null || event.key !== 'Enter')\r\n            return;\r\n    this.login();\r\n  }\r\n  \r\n  keyUpMessage(event) {\r\n    if (this.messageToken === null || event.key !== 'Enter')\r\n        return;\r\n    event.preventDefault();\r\n    if (this.message.value === \"\") return;\r\n    var form = new FormData();\r\n    form.append(\"message\", this.message.value);\r\n\r\n    var request = new XMLHttpRequest();\r\n    request.open(\"POST\", sessionStorage.getItem(\"url\") + \"/message\");\r\n    request.setRequestHeader(\r\n        \"Authorization\",\r\n        \"Bearer \" + this.messageToken\r\n    );\r\n    request.onreadystatechange = (event)=> {\r\n        if (event.target.readyState === 4 && event.target.status !== 403 && this.messageToken != null) {\r\n            this.messageToken = event.target.getResponseHeader(\"token\");\r\n        }\r\n    }\r\n    request.send(form);\r\n\r\n    this.message.value = \"\";\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <title>Budget-Cut Whatsapp</title>\r\n\r\n        <section id=\"container\">\r\n            <h1 id=\"title\" ref={elem => this.title = elem} class=\"disconnected\">Budget-Cut Whatsapp</h1>\r\n            <div id=\"window\">\r\n                <div id=\"chat\" ref={elem => this.chat = elem}>\r\n                    <ul>{(this.chats).map(item => (\r\n                        <li>\r\n                            {item} \r\n                        </li> \r\n                    ))}</ul>\r\n                </div>\r\n                <div id=\"user_window\">\r\n                    <h2>Online</h2>\r\n                    <ul id=\"users\" ref={elem => this.user_list = elem} >\r\n                        {Array.from(this.users).sort().map(item => (\r\n                        <li>\r\n                            {item} \r\n                        </li> \r\n                    ))}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <input id=\"message\" onKeyUp={this.keyUpMessage} ref={elem => this.message = elem} type=\"text\"/>\r\n        </section>\r\n        <div id=\"login-modal\" onKeyUp={this.keyUpLoginModal} ref={elem => this.login_modal = elem} >\r\n        <div class=\"content\">\r\n            <h2>Login</h2>\r\n            <div>\r\n                <label>Chat URL <br /><input id=\"url\" ref={elem => this.url = elem} type=\"text\"/></label>\r\n            </div>\r\n            <div>\r\n                <label>Username <br /><input id=\"username\" ref={elem => this.username = elem} type=\"text\"/></label>\r\n            </div>\r\n            <div>\r\n                <label>Password <br /><input id=\"password\" ref={elem => this.password = elem} type=\"password\"/></label>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}